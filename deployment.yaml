apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: app
    name: deploy-react-kubernetes-service
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30080
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: app
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app: app
    name: deploy-react-kubernetes-deployment
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: app
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: app
      spec:
        containers:
        - image: rafikarhaiem/reactapp:v1
          imagePullPolicy: IfNotPresent
          name: deploy-react-kubernetes
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
kind: List
metadata: {}
